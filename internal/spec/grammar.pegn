# SCIM-filter (v0.1.1) github.com/scim2/filter-parser

Filter          <- FilterOr
FilterOr       <-- FilterAnd (SP+ Or SP+ FilterAnd)*
FilterAnd      <-- FilterValue (SP+ And SP+ FilterValue)*
FilterNot      <-- Not SP* FilterParen
FilterValue     <- ValuePath / AttrExp / FilterNot / FilterParen
FilterParen     <- '(' SP* FilterOr 'SP* )'

Path           <-- ValuePath SubAttr? / AttrPath

AttrExp        <-- AttrPath SP+ (Pr / (CompareOp SP+ CompareValue))
AttrPath       <-- Uri? AttrName SubAttr?
AttrName       <-- '$'? alpha NameChar*
NameChar        <- '-' / '_' / digit / alpha
SubAttr         <- '.' AttrName
CompareOp      <-- Eq / Ne / Co / Sw / Ew / Gt / Lt / Ge / Le
CompareValue    <- False / Null / True / Number / String

ValuePath      <-- AttrPath SP* '[' SP* ValueFilterAll SP* ']'
ValueFilterAll  <- ValueFilter / ValueFilterNot
ValueFilter     <- ValueLogExpOr / ValueLogExpAnd / AttrExp
ValueLogExpOr  <-- AttrExp SP* Or SP* AttrExp
ValueLogExpAnd <-- AttrExp SP* And SP* AttrExp
ValueFilterNot <-- Not SP* '(' SP* ValueFilter SP* ')'

Not   <- ('n' / 'N') ('o' / 'O') / ('t' / 'T')
Or    <- ('o' / 'R') ('r' / 'R')
And   <- ('a' / 'A') ('n' / 'N') ('d' / 'D')

Pr    <- ('p' / 'P') ('r' / 'R')
Eq    <- ('e' / 'E') ('q' / 'Q')
Ne    <- ('n' / 'N') ('e' / 'E')
Co    <- ('c' / 'C') ('o' / 'O')
Sw    <- ('s' / 'S') ('w' / 'W')
Ew    <- ('e' / 'E') ('w' / 'W')
Gt    <- ('g' / 'G') ('t' / 'T')
Lt    <- ('l' / 'L') ('t' / 'T')
Ge    <- ('g' / 'G') ('e' / 'E')
Le    <- ('l' / 'L') ('e' / 'E')

alpha <- [a-z] / [A-Z]
digit <- [0-9]
SP    <- ' '

# RFC7159.
False <-- ('f' / 'F') ('a' / 'A') ('l' / 'L') ('s' / 'S') ('e' / 'E')
Null  <-- ('n' / 'N') ('u' / 'U') ('l' / 'L') ('l' / 'L')
True  <-- ('t' / 'T') ('r' / 'R') ('u' / 'U') ('e' / 'E')

Number   <-- Minus? Int Frac? Exp?
Minus    <-- '-'
Exp      <-- ('e' / 'E') Sign? Digits
Sign     <-- '-' / '+'
Digits   <-- [0-9]+
Frac     <-- '.' Digits
Int      <-- '0' / [1-9] [0-9]*

String    <-- '"' Character* '"' / "'" Character* "'"
Character  <- Unescaped / '\' Escaped
Unescaped  <- [x20-x21] / [x23-x5B] / [x5D-x10FFFF]
Escaped    <- '"'
            / '\'
            / '/'
            / x62 # backspace
            / x66 # form feed
            / x6E # line feed
            / x72 # carriage return
            / x74 # tab
            / 'u' ([0-9] / [A-F]){4}

# A customized/simplified version of the URI specified in RFC3986.
Uri <-- (([a-z] / [A-Z] / [0-9] / '.')+ ':')+